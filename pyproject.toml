[project]
name = "logseq-to-obsidian"
version = "0.1.0"
description = "Convert a Logseq vault to Obsidian-friendly Markdown"
license = "MIT"
readme = "README.md"
requires-python = ">=3.9,<4.0"
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Environment :: Console",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Topic :: Utilities",
]
authors = [
  {name = "Georg Lutz", email="georg@georglutz.de"},
]

[project.urls]
homepage = "https://github.com/sercxanto/logseq-to-obsidian"
repository = "https://github.com/sercxanto/logseq-to-obsidian.git"



[project.scripts]
logseq-to-obsidian = "logseq_to_obsidian.__main__:main"

[tool.poetry]

package-mode = true
packages = [
  { include = "logseq_to_obsidian", from = "src" },
]

[tool.poetry.group.dev.dependencies]
ruff = "^0.13.1"
pytest = "^8.4.2"
pytest-cov = "^5.0.0"
pyyaml = "^6.0.2"

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort (imports)
  "N",   # pep8-naming
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
]
ignore = [
  "E501",  # line length handled by formatter/line-length
  "F841",  # allow assigned-but-unused (keeps script unchanged)
]

[tool.pytest.ini_options]
addopts = "-q --cov=logseq_to_obsidian --cov-report=term-missing --cov-report=xml --cov-fail-under=80"
testpaths = [
  "tests",
]

[tool.coverage.run]
omit = [
  "src/logseq_to_obsidian/__main__.py",
]

#[tool.poetry.scripts]
#check = "tasks:check"
#fix = "tasks:fix"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"
